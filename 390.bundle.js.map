{"version":3,"file":"390.bundle.js","mappings":"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","sources":["webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/FederatedEvent.mjs","webpack://testtaskdigicode/./node_modules/ismobilejs/esm/isMobile.js","webpack://testtaskdigicode/./node_modules/pixi.js/lib/utils/browser/isMobile.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/accessibility/AccessibilitySystem.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/accessibility/init.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/accessibility/accessibilityTarget.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/EventTicker.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/FederatedMouseEvent.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/FederatedPointerEvent.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/FederatedWheelEvent.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/EventBoundary.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/EventSystem.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/FederatedEventTarget.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/events/init.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/dom/DOMPipe.mjs","webpack://testtaskdigicode/./node_modules/pixi.js/lib/dom/init.mjs"],"sourcesContent":["import { Point } from '../maths/point/Point.mjs';\n\n\"use strict\";\nclass FederatedEvent {\n  /**\n   * @param manager - The event boundary which manages this event. Propagation can only occur\n   *  within the boundary's jurisdiction.\n   */\n  constructor(manager) {\n    /** Flags whether this event bubbles. This will take effect only if it is set before propagation. */\n    this.bubbles = true;\n    /** @deprecated since 7.0.0 */\n    this.cancelBubble = true;\n    /**\n     * Flags whether this event can be canceled using {@link FederatedEvent.preventDefault}. This is always\n     * false (for now).\n     */\n    this.cancelable = false;\n    /**\n     * Flag added for compatibility with DOM `Event`. It is not used in the Federated Events\n     * API.\n     * @see https://dom.spec.whatwg.org/#dom-event-composed\n     * @ignore\n     */\n    this.composed = false;\n    /** Flags whether the default response of the user agent was prevent through this event. */\n    this.defaultPrevented = false;\n    /**\n     * The propagation phase.\n     * @default {@link FederatedEvent.NONE}\n     */\n    this.eventPhase = FederatedEvent.prototype.NONE;\n    /** Flags whether propagation was stopped. */\n    this.propagationStopped = false;\n    /** Flags whether propagation was immediately stopped. */\n    this.propagationImmediatelyStopped = false;\n    /** The coordinates of the event relative to the nearest DOM layer. This is a non-standard property. */\n    this.layer = new Point();\n    /** The coordinates of the event relative to the DOM document. This is a non-standard property. */\n    this.page = new Point();\n    /**\n     * The event propagation phase NONE that indicates that the event is not in any phase.\n     * @default 0\n     * @advanced\n     */\n    this.NONE = 0;\n    /**\n     * The event propagation phase CAPTURING_PHASE that indicates that the event is in the capturing phase.\n     * @default 1\n     * @advanced\n     */\n    this.CAPTURING_PHASE = 1;\n    /**\n     * The event propagation phase AT_TARGET that indicates that the event is at the target.\n     * @default 2\n     * @advanced\n     */\n    this.AT_TARGET = 2;\n    /**\n     * The event propagation phase BUBBLING_PHASE that indicates that the event is in the bubbling phase.\n     * @default 3\n     * @advanced\n     */\n    this.BUBBLING_PHASE = 3;\n    this.manager = manager;\n  }\n  /** @readonly */\n  get layerX() {\n    return this.layer.x;\n  }\n  /** @readonly */\n  get layerY() {\n    return this.layer.y;\n  }\n  /** @readonly */\n  get pageX() {\n    return this.page.x;\n  }\n  /** @readonly */\n  get pageY() {\n    return this.page.y;\n  }\n  /**\n   * Fallback for the deprecated `InteractionEvent.data`.\n   * @deprecated since 7.0.0\n   */\n  get data() {\n    return this;\n  }\n  /**\n   * The propagation path for this event. Alias for {@link EventBoundary.propagationPath}.\n   * @advanced\n   */\n  composedPath() {\n    if (this.manager && (!this.path || this.path[this.path.length - 1] !== this.target)) {\n      this.path = this.target ? this.manager.propagationPath(this.target) : [];\n    }\n    return this.path;\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface `Event`. It will throw an `Error`.\n   * @deprecated\n   * @ignore\n   * @param _type\n   * @param _bubbles\n   * @param _cancelable\n   */\n  initEvent(_type, _bubbles, _cancelable) {\n    throw new Error(\"initEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface `UIEvent`. It will throw an `Error`.\n   * @ignore\n   * @deprecated\n   * @param _typeArg\n   * @param _bubblesArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   */\n  initUIEvent(_typeArg, _bubblesArg, _cancelableArg, _viewArg, _detailArg) {\n    throw new Error(\"initUIEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /**\n   * Prevent default behavior of both PixiJS and the user agent.\n   * @example\n   * ```ts\n   * sprite.on('click', (event) => {\n   *     // Prevent both browser's default click behavior\n   *     // and PixiJS's default handling\n   *     event.preventDefault();\n   *\n   *     // Custom handling\n   *     customClickHandler();\n   * });\n   * ```\n   * @remarks\n   * - Only works if the native event is cancelable\n   * - Does not stop event propagation\n   */\n  preventDefault() {\n    if (this.nativeEvent instanceof Event && this.nativeEvent.cancelable) {\n      this.nativeEvent.preventDefault();\n    }\n    this.defaultPrevented = true;\n  }\n  /**\n   * Stop this event from propagating to any additional listeners, including those\n   * on the current target and any following targets in the propagation path.\n   * @example\n   * ```ts\n   * container.on('pointerdown', (event) => {\n   *     // Stop all further event handling\n   *     event.stopImmediatePropagation();\n   *\n   *     // These handlers won't be called:\n   *     // - Other pointerdown listeners on this container\n   *     // - Any pointerdown listeners on parent containers\n   * });\n   * ```\n   * @remarks\n   * - Immediately stops all event propagation\n   * - Prevents other listeners on same target from being called\n   * - More aggressive than stopPropagation()\n   */\n  stopImmediatePropagation() {\n    this.propagationImmediatelyStopped = true;\n  }\n  /**\n   * Stop this event from propagating to the next target in the propagation path.\n   * The rest of the listeners on the current target will still be notified.\n   * @example\n   * ```ts\n   * child.on('pointermove', (event) => {\n   *     // Handle event on child\n   *     updateChild();\n   *\n   *     // Prevent parent handlers from being called\n   *     event.stopPropagation();\n   * });\n   *\n   * // This won't be called if child handles the event\n   * parent.on('pointermove', (event) => {\n   *     updateParent();\n   * });\n   * ```\n   * @remarks\n   * - Stops event bubbling to parent containers\n   * - Does not prevent other listeners on same target\n   * - Less aggressive than stopImmediatePropagation()\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\nexport { FederatedEvent };\n//# sourceMappingURL=FederatedEvent.mjs.map\n","var appleIphone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\nvar androidTablet = /Android/i;\nvar amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\nvar amazonTablet = /Silk/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\nvar otherBlackBerry = /BlackBerry/i;\nvar otherBlackBerry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i;\nvar isAppleTabletOnIos13 = function (navigator) {\n    return (typeof navigator !== 'undefined' &&\n        navigator.platform === 'MacIntel' &&\n        typeof navigator.maxTouchPoints === 'number' &&\n        navigator.maxTouchPoints > 1 &&\n        typeof MSStream === 'undefined');\n};\nfunction createMatch(userAgent) {\n    return function (regex) { return regex.test(userAgent); };\n}\nexport default function isMobile(param) {\n    var nav = {\n        userAgent: '',\n        platform: '',\n        maxTouchPoints: 0\n    };\n    if (!param && typeof navigator !== 'undefined') {\n        nav = {\n            userAgent: navigator.userAgent,\n            platform: navigator.platform,\n            maxTouchPoints: navigator.maxTouchPoints || 0\n        };\n    }\n    else if (typeof param === 'string') {\n        nav.userAgent = param;\n    }\n    else if (param && param.userAgent) {\n        nav = {\n            userAgent: param.userAgent,\n            platform: param.platform,\n            maxTouchPoints: param.maxTouchPoints || 0\n        };\n    }\n    var userAgent = nav.userAgent;\n    var tmp = userAgent.split('[FBAN');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    tmp = userAgent.split('Twitter');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    var match = createMatch(userAgent);\n    var result = {\n        apple: {\n            phone: match(appleIphone) && !match(windowsPhone),\n            ipod: match(appleIpod),\n            tablet: !match(appleIphone) &&\n                (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone),\n            universal: match(appleUniversal),\n            device: (match(appleIphone) ||\n                match(appleIpod) ||\n                match(appleTablet) ||\n                match(appleUniversal) ||\n                isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone)\n        },\n        amazon: {\n            phone: match(amazonPhone),\n            tablet: !match(amazonPhone) && match(amazonTablet),\n            device: match(amazonPhone) || match(amazonTablet)\n        },\n        android: {\n            phone: (!match(windowsPhone) && match(amazonPhone)) ||\n                (!match(windowsPhone) && match(androidPhone)),\n            tablet: !match(windowsPhone) &&\n                !match(amazonPhone) &&\n                !match(androidPhone) &&\n                (match(amazonTablet) || match(androidTablet)),\n            device: (!match(windowsPhone) &&\n                (match(amazonPhone) ||\n                    match(amazonTablet) ||\n                    match(androidPhone) ||\n                    match(androidTablet))) ||\n                match(/\\bokhttp\\b/i)\n        },\n        windows: {\n            phone: match(windowsPhone),\n            tablet: match(windowsTablet),\n            device: match(windowsPhone) || match(windowsTablet)\n        },\n        other: {\n            blackberry: match(otherBlackBerry),\n            blackberry10: match(otherBlackBerry10),\n            opera: match(otherOpera),\n            firefox: match(otherFirefox),\n            chrome: match(otherChrome),\n            device: match(otherBlackBerry) ||\n                match(otherBlackBerry10) ||\n                match(otherOpera) ||\n                match(otherFirefox) ||\n                match(otherChrome)\n        },\n        any: false,\n        phone: false,\n        tablet: false\n    };\n    result.any =\n        result.apple.device ||\n            result.android.device ||\n            result.windows.device ||\n            result.other.device;\n    result.phone =\n        result.apple.phone || result.android.phone || result.windows.phone;\n    result.tablet =\n        result.apple.tablet || result.android.tablet || result.windows.tablet;\n    return result;\n}\n//# sourceMappingURL=isMobile.js.map","import isMobileJs from 'ismobilejs';\n\n\"use strict\";\nconst isMobileCall = isMobileJs.default ?? isMobileJs;\nconst isMobile = isMobileCall(globalThis.navigator);\n\nexport { isMobile };\n//# sourceMappingURL=isMobile.mjs.map\n","import { FederatedEvent } from '../events/FederatedEvent.mjs';\nimport { ExtensionType } from '../extensions/Extensions.mjs';\nimport { isMobile } from '../utils/browser/isMobile.mjs';\nimport { removeItems } from '../utils/data/removeItems.mjs';\n\n\"use strict\";\nconst KEY_CODE_TAB = 9;\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1e3;\nconst DIV_HOOK_POS_Y = -1e3;\nconst DIV_HOOK_ZINDEX = 2;\nconst _AccessibilitySystem = class _AccessibilitySystem {\n  // 2fps\n  // eslint-disable-next-line jsdoc/require-param\n  /**\n   * @param {WebGLRenderer|WebGPURenderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer, _mobileInfo = isMobile) {\n    this._mobileInfo = _mobileInfo;\n    /** Whether accessibility divs are visible for debugging */\n    this.debug = false;\n    /** Whether to activate on tab key press */\n    this._activateOnTab = true;\n    /** Whether to deactivate accessibility when mouse moves */\n    this._deactivateOnMouseMove = true;\n    /** Internal variable, see isActive getter. */\n    this._isActive = false;\n    /** Internal variable, see isMobileAccessibility getter. */\n    this._isMobileAccessibility = false;\n    /** This is the dom element that will sit over the PixiJS element. This is where the div overlays will go. */\n    this._div = null;\n    /** A simple pool for storing divs. */\n    this._pool = [];\n    /** This is a tick used to check if an object is no longer being rendered. */\n    this._renderId = 0;\n    /** The array of currently active accessible items. */\n    this._children = [];\n    /** Count to throttle div updates on android devices. */\n    this._androidUpdateCount = 0;\n    /**  The frequency to update the div elements. */\n    this._androidUpdateFrequency = 500;\n    this._hookDiv = null;\n    if (_mobileInfo.tablet || _mobileInfo.phone) {\n      this._createTouchHook();\n    }\n    this._renderer = renderer;\n  }\n  /**\n   * Value of `true` if accessibility is currently active and accessibility layers are showing.\n   * @type {boolean}\n   * @readonly\n   */\n  get isActive() {\n    return this._isActive;\n  }\n  /**\n   * Value of `true` if accessibility is enabled for touch devices.\n   * @type {boolean}\n   * @readonly\n   */\n  get isMobileAccessibility() {\n    return this._isMobileAccessibility;\n  }\n  /**\n   * The DOM element that will sit over the PixiJS element. This is where the div overlays will go.\n   * @readonly\n   */\n  get hookDiv() {\n    return this._hookDiv;\n  }\n  /**\n   * Creates the touch hooks.\n   * @private\n   */\n  _createTouchHook() {\n    const hookDiv = document.createElement(\"button\");\n    hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.position = \"absolute\";\n    hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n    hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n    hookDiv.style.backgroundColor = \"#FF0000\";\n    hookDiv.title = \"select to enable accessibility for this content\";\n    hookDiv.addEventListener(\"focus\", () => {\n      this._isMobileAccessibility = true;\n      this._activate();\n      this._destroyTouchHook();\n    });\n    document.body.appendChild(hookDiv);\n    this._hookDiv = hookDiv;\n  }\n  /**\n   * Destroys the touch hooks.\n   * @private\n   */\n  _destroyTouchHook() {\n    if (!this._hookDiv) {\n      return;\n    }\n    document.body.removeChild(this._hookDiv);\n    this._hookDiv = null;\n  }\n  /**\n   * Activating will cause the Accessibility layer to be shown.\n   * This is called when a user presses the tab key.\n   * @private\n   */\n  _activate() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n    if (!this._div) {\n      this._div = document.createElement(\"div\");\n      this._div.style.width = `${DIV_TOUCH_SIZE}px`;\n      this._div.style.height = `${DIV_TOUCH_SIZE}px`;\n      this._div.style.position = \"absolute\";\n      this._div.style.top = `${DIV_TOUCH_POS_X}px`;\n      this._div.style.left = `${DIV_TOUCH_POS_Y}px`;\n      this._div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      this._div.style.pointerEvents = \"none\";\n    }\n    if (this._activateOnTab) {\n      this._onKeyDown = this._onKeyDown.bind(this);\n      globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    }\n    if (this._deactivateOnMouseMove) {\n      this._onMouseMove = this._onMouseMove.bind(this);\n      globalThis.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n    }\n    const canvas = this._renderer.view.canvas;\n    if (!canvas.parentNode) {\n      const observer = new MutationObserver(() => {\n        if (canvas.parentNode) {\n          canvas.parentNode.appendChild(this._div);\n          observer.disconnect();\n          this._initAccessibilitySetup();\n        }\n      });\n      observer.observe(document.body, { childList: true, subtree: true });\n    } else {\n      canvas.parentNode.appendChild(this._div);\n      this._initAccessibilitySetup();\n    }\n  }\n  // New method to handle initialization after div is ready\n  _initAccessibilitySetup() {\n    this._renderer.runners.postrender.add(this);\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n    }\n  }\n  /**\n   * Deactivates the accessibility system. Removes listeners and accessibility elements.\n   * @private\n   */\n  _deactivate() {\n    if (!this._isActive || this._isMobileAccessibility) {\n      return;\n    }\n    this._isActive = false;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    if (this._activateOnTab) {\n      globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    }\n    this._renderer.runners.postrender.remove(this);\n    for (const child of this._children) {\n      if (child._accessibleDiv && child._accessibleDiv.parentNode) {\n        child._accessibleDiv.parentNode.removeChild(child._accessibleDiv);\n        child._accessibleDiv = null;\n      }\n      child._accessibleActive = false;\n    }\n    this._pool.forEach((div) => {\n      if (div.parentNode) {\n        div.parentNode.removeChild(div);\n      }\n    });\n    if (this._div && this._div.parentNode) {\n      this._div.parentNode.removeChild(this._div);\n    }\n    this._pool = [];\n    this._children = [];\n  }\n  /**\n   * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n   * @private\n   * @param {Container} container - The Container to check.\n   */\n  _updateAccessibleObjects(container) {\n    if (!container.visible || !container.accessibleChildren) {\n      return;\n    }\n    if (container.accessible) {\n      if (!container._accessibleActive) {\n        this._addChild(container);\n      }\n      container._renderId = this._renderId;\n    }\n    const children = container.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        this._updateAccessibleObjects(children[i]);\n      }\n    }\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const defaultOpts = _AccessibilitySystem.defaultOptions;\n    const mergedOptions = {\n      accessibilityOptions: {\n        ...defaultOpts,\n        ...options?.accessibilityOptions || {}\n      }\n    };\n    this.debug = mergedOptions.accessibilityOptions.debug;\n    this._activateOnTab = mergedOptions.accessibilityOptions.activateOnTab;\n    this._deactivateOnMouseMove = mergedOptions.accessibilityOptions.deactivateOnMouseMove;\n    if (mergedOptions.accessibilityOptions.enabledByDefault) {\n      this._activate();\n    } else if (this._activateOnTab) {\n      this._onKeyDown = this._onKeyDown.bind(this);\n      globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    }\n    this._renderer.runners.postrender.remove(this);\n  }\n  /**\n   * Updates the accessibility layer during rendering.\n   * - Removes divs for containers no longer in the scene\n   * - Updates the position and dimensions of the root div\n   * - Updates positions of active accessibility divs\n   * Only fires while the accessibility system is active.\n   * @ignore\n   */\n  postrender() {\n    const now = performance.now();\n    if (this._mobileInfo.android.device && now < this._androidUpdateCount) {\n      return;\n    }\n    this._androidUpdateCount = now + this._androidUpdateFrequency;\n    if (!this._renderer.renderingToScreen || !this._renderer.view.canvas) {\n      return;\n    }\n    const activeIds = /* @__PURE__ */ new Set();\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n      for (const child of this._children) {\n        if (child._renderId === this._renderId) {\n          activeIds.add(this._children.indexOf(child));\n        }\n      }\n    }\n    for (let i = this._children.length - 1; i >= 0; i--) {\n      const child = this._children[i];\n      if (!activeIds.has(i)) {\n        if (child._accessibleDiv && child._accessibleDiv.parentNode) {\n          child._accessibleDiv.parentNode.removeChild(child._accessibleDiv);\n          this._pool.push(child._accessibleDiv);\n          child._accessibleDiv = null;\n        }\n        child._accessibleActive = false;\n        removeItems(this._children, i, 1);\n      }\n    }\n    if (this._renderer.renderingToScreen) {\n      const { x, y, width: viewWidth, height: viewHeight } = this._renderer.screen;\n      const div = this._div;\n      div.style.left = `${x}px`;\n      div.style.top = `${y}px`;\n      div.style.width = `${viewWidth}px`;\n      div.style.height = `${viewHeight}px`;\n    }\n    for (let i = 0; i < this._children.length; i++) {\n      const child = this._children[i];\n      if (!child._accessibleActive || !child._accessibleDiv) {\n        continue;\n      }\n      const div = child._accessibleDiv;\n      const hitArea = child.hitArea || child.getBounds().rectangle;\n      if (child.hitArea) {\n        const wt = child.worldTransform;\n        const sx = this._renderer.resolution;\n        const sy = this._renderer.resolution;\n        div.style.left = `${(wt.tx + hitArea.x * wt.a) * sx}px`;\n        div.style.top = `${(wt.ty + hitArea.y * wt.d) * sy}px`;\n        div.style.width = `${hitArea.width * wt.a * sx}px`;\n        div.style.height = `${hitArea.height * wt.d * sy}px`;\n      } else {\n        this._capHitArea(hitArea);\n        const sx = this._renderer.resolution;\n        const sy = this._renderer.resolution;\n        div.style.left = `${hitArea.x * sx}px`;\n        div.style.top = `${hitArea.y * sy}px`;\n        div.style.width = `${hitArea.width * sx}px`;\n        div.style.height = `${hitArea.height * sy}px`;\n      }\n    }\n    this._renderId++;\n  }\n  /**\n   * private function that will visually add the information to the\n   * accessibility div\n   * @param {HTMLElement} div -\n   */\n  _updateDebugHTML(div) {\n    div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n  }\n  /**\n   * Adjust the hit area based on the bounds of a display object\n   * @param {Rectangle} hitArea - Bounds of the child\n   */\n  _capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    const { width: viewWidth, height: viewHeight } = this._renderer;\n    if (hitArea.x + hitArea.width > viewWidth) {\n      hitArea.width = viewWidth - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > viewHeight) {\n      hitArea.height = viewHeight - hitArea.y;\n    }\n  }\n  /**\n   * Creates or reuses a div element for a Container and adds it to the accessibility layer.\n   * Sets up ARIA attributes, event listeners, and positioning based on the container's properties.\n   * @private\n   * @param {Container} container - The child to make accessible.\n   */\n  _addChild(container) {\n    let div = this._pool.pop();\n    if (!div) {\n      if (container.accessibleType === \"button\") {\n        div = document.createElement(\"button\");\n      } else {\n        div = document.createElement(container.accessibleType);\n        div.style.cssText = `\n                        color: transparent;\n                        pointer-events: none;\n                        padding: 0;\n                        margin: 0;\n                        border: 0;\n                        outline: 0;\n                        background: transparent;\n                        box-sizing: border-box;\n                        user-select: none;\n                        -webkit-user-select: none;\n                        -moz-user-select: none;\n                        -ms-user-select: none;\n                    `;\n        if (container.accessibleText) {\n          div.innerText = container.accessibleText;\n        }\n      }\n      div.style.width = `${DIV_TOUCH_SIZE}px`;\n      div.style.height = `${DIV_TOUCH_SIZE}px`;\n      div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n      div.style.position = \"absolute\";\n      div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      div.style.borderStyle = \"none\";\n      if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n        div.setAttribute(\"aria-live\", \"off\");\n      } else {\n        div.setAttribute(\"aria-live\", \"polite\");\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        div.setAttribute(\"aria-relevant\", \"additions\");\n      } else {\n        div.setAttribute(\"aria-relevant\", \"text\");\n      }\n      div.addEventListener(\"click\", this._onClick.bind(this));\n      div.addEventListener(\"focus\", this._onFocus.bind(this));\n      div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n    }\n    div.style.pointerEvents = container.accessiblePointerEvents;\n    div.type = container.accessibleType;\n    if (container.accessibleTitle && container.accessibleTitle !== null) {\n      div.title = container.accessibleTitle;\n    } else if (!container.accessibleHint || container.accessibleHint === null) {\n      div.title = `container ${container.tabIndex}`;\n    }\n    if (container.accessibleHint && container.accessibleHint !== null) {\n      div.setAttribute(\"aria-label\", container.accessibleHint);\n    }\n    if (this.debug) {\n      this._updateDebugHTML(div);\n    }\n    container._accessibleActive = true;\n    container._accessibleDiv = div;\n    div.container = container;\n    this._children.push(container);\n    this._div.appendChild(container._accessibleDiv);\n    if (container.interactive) {\n      container._accessibleDiv.tabIndex = container.tabIndex;\n    }\n  }\n  /**\n   * Dispatch events with the EventSystem.\n   * @param e\n   * @param type\n   * @private\n   */\n  _dispatchEvent(e, type) {\n    const { container: target } = e.target;\n    const boundary = this._renderer.events.rootBoundary;\n    const event = Object.assign(new FederatedEvent(boundary), { target });\n    boundary.rootTarget = this._renderer.lastObjectRendered;\n    type.forEach((type2) => boundary.dispatchEvent(event, type2));\n  }\n  /**\n   * Maps the div button press to pixi's EventSystem (click)\n   * @private\n   * @param {MouseEvent} e - The click event.\n   */\n  _onClick(e) {\n    this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseover)\n   * @private\n   * @param {FocusEvent} e - The focus event.\n   */\n  _onFocus(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"assertive\");\n    }\n    this._dispatchEvent(e, [\"mouseover\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseout)\n   * @private\n   * @param {FocusEvent} e - The focusout event.\n   */\n  _onFocusOut(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"polite\");\n    }\n    this._dispatchEvent(e, [\"mouseout\"]);\n  }\n  /**\n   * Is called when a key is pressed\n   * @private\n   * @param {KeyboardEvent} e - The keydown event.\n   */\n  _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB || !this._activateOnTab) {\n      return;\n    }\n    this._activate();\n  }\n  /**\n   * Is called when the mouse moves across the renderer element\n   * @private\n   * @param {MouseEvent} e - The mouse event.\n   */\n  _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n  /**\n   * Destroys the accessibility system. Removes all elements and listeners.\n   * > [!IMPORTANT] This is typically called automatically when the {@link Application} is destroyed.\n   * > A typically user should not need to call this method directly.\n   */\n  destroy() {\n    this._deactivate();\n    this._destroyTouchHook();\n    this._div = null;\n    this._pool = null;\n    this._children = null;\n    this._renderer = null;\n    if (this._activateOnTab) {\n      globalThis.removeEventListener(\"keydown\", this._onKeyDown);\n    }\n  }\n  /**\n   * Enables or disables the accessibility system.\n   * @param enabled - Whether to enable or disable accessibility.\n   * @example\n   * ```js\n   * app.renderer.accessibility.setAccessibilityEnabled(true); // Enable accessibility\n   * app.renderer.accessibility.setAccessibilityEnabled(false); // Disable accessibility\n   * ```\n   */\n  setAccessibilityEnabled(enabled) {\n    if (enabled) {\n      this._activate();\n    } else {\n      this._deactivate();\n    }\n  }\n};\n/** @ignore */\n_AccessibilitySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"accessibility\"\n};\n/**\n * The default options used by the system.\n * You can set these before initializing the {@link Application} to change the default behavior.\n * @example\n * ```js\n * import { AccessibilitySystem } from 'pixi.js';\n *\n * AccessibilitySystem.defaultOptions.enabledByDefault = true;\n *\n * const app = new Application()\n * app.init()\n * ```\n */\n_AccessibilitySystem.defaultOptions = {\n  /**\n   * Whether to enable accessibility features on initialization\n   * @default false\n   */\n  enabledByDefault: false,\n  /**\n   * Whether to visually show the accessibility divs for debugging\n   * @default false\n   */\n  debug: false,\n  /**\n   * Whether to activate accessibility when tab key is pressed\n   * @default true\n   */\n  activateOnTab: true,\n  /**\n   * Whether to deactivate accessibility when mouse moves\n   * @default true\n   */\n  deactivateOnMouseMove: true\n};\nlet AccessibilitySystem = _AccessibilitySystem;\n\nexport { AccessibilitySystem };\n//# sourceMappingURL=AccessibilitySystem.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { AccessibilitySystem } from './AccessibilitySystem.mjs';\nimport { accessibilityTarget } from './accessibilityTarget.mjs';\n\n\"use strict\";\nextensions.add(AccessibilitySystem);\nextensions.mixin(Container, accessibilityTarget);\n//# sourceMappingURL=init.mjs.map\n","\"use strict\";\nconst accessibilityTarget = {\n  accessible: false,\n  accessibleTitle: null,\n  accessibleHint: null,\n  tabIndex: 0,\n  accessibleType: \"button\",\n  accessibleText: null,\n  accessiblePointerEvents: \"auto\",\n  accessibleChildren: true,\n  _accessibleActive: false,\n  _accessibleDiv: null,\n  _renderId: -1\n};\n\nexport { accessibilityTarget };\n//# sourceMappingURL=accessibilityTarget.mjs.map\n","import { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass EventsTickerClass {\n  constructor() {\n    /** The frequency that fake events will be fired. */\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener();\n    this.events = events;\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    if (this._tickerAdded || !this.domElement) {\n      return;\n    }\n    Ticker.system.add(this._tickerUpdate, this, UPDATE_PRIORITY.INTERACTION);\n    this._tickerAdded = true;\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    if (!this._tickerAdded) {\n      return;\n    }\n    Ticker.system.remove(this._tickerUpdate, this);\n    this._tickerAdded = false;\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = true;\n  }\n  /** Updates the state of interactive objects. */\n  _update() {\n    if (!this.domElement || this._pauseUpdate) {\n      return;\n    }\n    if (this._didMove) {\n      this._didMove = false;\n      return;\n    }\n    const rootPointerEvent = this.events[\"_rootPointerEvent\"];\n    if (this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\") {\n      return;\n    }\n    globalThis.document.dispatchEvent(this.events.supportsPointerEvents ? new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY,\n      pointerType: rootPointerEvent.pointerType,\n      pointerId: rootPointerEvent.pointerId\n    }) : new MouseEvent(\"mousemove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link Ticker.system}.\n   * @param ticker - The throttled ticker.\n   */\n  _tickerUpdate(ticker) {\n    this._deltaTime += ticker.deltaTime;\n    if (this._deltaTime < this.interactionFrequency) {\n      return;\n    }\n    this._deltaTime = 0;\n    this._update();\n  }\n}\nconst EventsTicker = new EventsTickerClass();\n\nexport { EventsTicker };\n//# sourceMappingURL=EventTicker.mjs.map\n","import { Point } from '../maths/point/Point.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nclass FederatedMouseEvent extends FederatedEvent {\n  constructor() {\n    super(...arguments);\n    /** The coordinates of the mouse event relative to the canvas. */\n    this.client = new Point();\n    /** The movement in this pointer relative to the last `mousemove` event. */\n    this.movement = new Point();\n    /** The offset of the pointer coordinates w.r.t. target Container in world space. This is not supported at the moment. */\n    this.offset = new Point();\n    /** The pointer coordinates in world space. */\n    this.global = new Point();\n    /**\n     * The pointer coordinates in the renderer's {@link AbstractRenderer.screen screen}. This has slightly\n     * different semantics than native PointerEvent screenX/screenY.\n     */\n    this.screen = new Point();\n  }\n  /** @readonly */\n  get clientX() {\n    return this.client.x;\n  }\n  /** @readonly */\n  get clientY() {\n    return this.client.y;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientX this.clientX}.\n   * @readonly\n   */\n  get x() {\n    return this.clientX;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientY this.clientY}.\n   * @readonly\n   */\n  get y() {\n    return this.clientY;\n  }\n  /** @readonly */\n  get movementX() {\n    return this.movement.x;\n  }\n  /** @readonly */\n  get movementY() {\n    return this.movement.y;\n  }\n  /** @readonly */\n  get offsetX() {\n    return this.offset.x;\n  }\n  /** @readonly */\n  get offsetY() {\n    return this.offset.y;\n  }\n  /** @readonly */\n  get globalX() {\n    return this.global.x;\n  }\n  /** @readonly */\n  get globalY() {\n    return this.global.y;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for `screen.x`.\n   * @readonly\n   */\n  get screenX() {\n    return this.screen.x;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for `screen.y`.\n   * @readonly\n   */\n  get screenY() {\n    return this.screen.y;\n  }\n  /**\n   * Converts global coordinates into container-local coordinates.\n   *\n   * This method transforms coordinates from world space to a container's local space,\n   * useful for precise positioning and hit testing.\n   * @param container - The Container to get local coordinates for\n   * @param point - Optional Point object to store the result. If not provided, a new Point will be created\n   * @param globalPos - Optional custom global coordinates. If not provided, the event's global position is used\n   * @returns The local coordinates as a Point object\n   * @example\n   * ```ts\n   * // Basic usage - get local coordinates relative to a container\n   * sprite.on('pointermove', (event: FederatedMouseEvent) => {\n   *     // Get position relative to the sprite\n   *     const localPos = event.getLocalPosition(sprite);\n   *     console.log('Local position:', localPos.x, localPos.y);\n   * });\n   * // Using custom global coordinates\n   * const customGlobal = new Point(100, 100);\n   * sprite.on('pointermove', (event: FederatedMouseEvent) => {\n   *     // Transform custom coordinates\n   *     const localPos = event.getLocalPosition(sprite, undefined, customGlobal);\n   *     console.log('Custom local position:', localPos.x, localPos.y);\n   * });\n   * ```\n   * @see {@link Container.worldTransform} For the transformation matrix\n   * @see {@link Point} For the point class used to store coordinates\n   */\n  getLocalPosition(container, point, globalPos) {\n    return container.worldTransform.applyInverse(globalPos || this.global, point);\n  }\n  /**\n   * Whether the modifier key was pressed when this event natively occurred.\n   * @param key - The modifier key.\n   */\n  getModifierState(key) {\n    return \"getModifierState\" in this.nativeEvent && this.nativeEvent.getModifierState(key);\n  }\n  /**\n   * Not supported.\n   * @param _typeArg\n   * @param _canBubbleArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   * @param _screenXArg\n   * @param _screenYArg\n   * @param _clientXArg\n   * @param _clientYArg\n   * @param _ctrlKeyArg\n   * @param _altKeyArg\n   * @param _shiftKeyArg\n   * @param _metaKeyArg\n   * @param _buttonArg\n   * @param _relatedTargetArg\n   * @deprecated since 7.0.0\n   * @ignore\n   */\n  // eslint-disable-next-line max-params\n  initMouseEvent(_typeArg, _canBubbleArg, _cancelableArg, _viewArg, _detailArg, _screenXArg, _screenYArg, _clientXArg, _clientYArg, _ctrlKeyArg, _altKeyArg, _shiftKeyArg, _metaKeyArg, _buttonArg, _relatedTargetArg) {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport { FederatedMouseEvent };\n//# sourceMappingURL=FederatedMouseEvent.mjs.map\n","import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedPointerEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    this.isPrimary = false;\n  }\n  /**\n   * Only included for completeness for now\n   * @ignore\n   */\n  getCoalescedEvents() {\n    if (this.type === \"pointermove\" || this.type === \"mousemove\" || this.type === \"touchmove\") {\n      return [this];\n    }\n    return [];\n  }\n  /**\n   * Only included for completeness for now\n   * @ignore\n   */\n  getPredictedEvents() {\n    throw new Error(\"getPredictedEvents is not supported!\");\n  }\n}\n\nexport { FederatedPointerEvent };\n//# sourceMappingURL=FederatedPointerEvent.mjs.map\n","import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedWheelEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * Units specified in pixels.\n     * @ignore\n     */\n    this.DOM_DELTA_PIXEL = 0;\n    /**\n     * Units specified in lines.\n     * @ignore\n     */\n    this.DOM_DELTA_LINE = 1;\n    /**\n     * Units specified in pages.\n     * @ignore\n     */\n    this.DOM_DELTA_PAGE = 2;\n  }\n}\n/**\n * Units specified in pixels.\n * @ignore\n */\nFederatedWheelEvent.DOM_DELTA_PIXEL = 0;\n/**\n * Units specified in lines.\n * @ignore\n */\nFederatedWheelEvent.DOM_DELTA_LINE = 1;\n/**\n * Units specified in pages.\n * @ignore\n */\nFederatedWheelEvent.DOM_DELTA_PAGE = 2;\n\nexport { FederatedWheelEvent };\n//# sourceMappingURL=FederatedWheelEvent.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Point } from '../maths/point/Point.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst PROPAGATION_LIMIT = 2048;\nconst tempHitLocation = new Point();\nconst tempLocalMapping = new Point();\nclass EventBoundary {\n  /**\n   * @param rootTarget - The holder of the event boundary.\n   */\n  constructor(rootTarget) {\n    /**\n     * Emits events after they were dispatched into the scene graph.\n     *\n     * This can be used for global events listening, regardless of the scene graph being used. It should\n     * not be used by interactive libraries for normal use.\n     *\n     * Special events that do not bubble all the way to the root target are not emitted from here,\n     * e.g. pointerenter, pointerleave, click.\n     */\n    this.dispatch = new EventEmitter();\n    /**\n     * This flag would emit `pointermove`, `touchmove`, and `mousemove` events on all Containers.\n     *\n     * The `moveOnAll` semantics mirror those of earlier versions of PixiJS. This was disabled in favor of\n     * the Pointer Event API's approach.\n     */\n    this.moveOnAll = false;\n    /** Enables the global move events. `globalpointermove`, `globaltouchmove`, and `globalmousemove` */\n    this.enableGlobalMoveEvents = true;\n    /**\n     * State object for mapping methods.\n     * @see EventBoundary#trackingData\n     */\n    this.mappingState = {\n      trackingData: {}\n    };\n    /**\n     * The event pool maps event constructors to an free pool of instances of those specific events.\n     * @see EventBoundary#allocateEvent\n     * @see EventBoundary#freeEvent\n     */\n    this.eventPool = /* @__PURE__ */ new Map();\n    /** Every interactive element gathered from the scene. Only used in `pointermove` */\n    this._allInteractiveElements = [];\n    /** Every element that passed the hit test. Only used in `pointermove` */\n    this._hitElements = [];\n    /** Whether or not to collect all the interactive elements from the scene. Enabled in `pointermove` */\n    this._isPointerMoveEvent = false;\n    this.rootTarget = rootTarget;\n    this.hitPruneFn = this.hitPruneFn.bind(this);\n    this.hitTestFn = this.hitTestFn.bind(this);\n    this.mapPointerDown = this.mapPointerDown.bind(this);\n    this.mapPointerMove = this.mapPointerMove.bind(this);\n    this.mapPointerOut = this.mapPointerOut.bind(this);\n    this.mapPointerOver = this.mapPointerOver.bind(this);\n    this.mapPointerUp = this.mapPointerUp.bind(this);\n    this.mapPointerUpOutside = this.mapPointerUpOutside.bind(this);\n    this.mapWheel = this.mapWheel.bind(this);\n    this.mappingTable = {};\n    this.addEventMapping(\"pointerdown\", this.mapPointerDown);\n    this.addEventMapping(\"pointermove\", this.mapPointerMove);\n    this.addEventMapping(\"pointerout\", this.mapPointerOut);\n    this.addEventMapping(\"pointerleave\", this.mapPointerOut);\n    this.addEventMapping(\"pointerover\", this.mapPointerOver);\n    this.addEventMapping(\"pointerup\", this.mapPointerUp);\n    this.addEventMapping(\"pointerupoutside\", this.mapPointerUpOutside);\n    this.addEventMapping(\"wheel\", this.mapWheel);\n  }\n  /**\n   * Adds an event mapping for the event `type` handled by `fn`.\n   *\n   * Event mappings can be used to implement additional or custom events. They take an event\n   * coming from the upstream scene (or directly from the {@link EventSystem}) and dispatch new downstream events\n   * generally trickling down and bubbling up to {@link EventBoundary.rootTarget this.rootTarget}.\n   *\n   * To modify the semantics of existing events, the built-in mapping methods of EventBoundary should be overridden\n   * instead.\n   * @param type - The type of upstream event to map.\n   * @param fn - The mapping method. The context of this function must be bound manually, if desired.\n   */\n  addEventMapping(type, fn) {\n    if (!this.mappingTable[type]) {\n      this.mappingTable[type] = [];\n    }\n    this.mappingTable[type].push({\n      fn,\n      priority: 0\n    });\n    this.mappingTable[type].sort((a, b) => a.priority - b.priority);\n  }\n  /**\n   * Dispatches the given event\n   * @param e - The event to dispatch.\n   * @param type - The type of event to dispatch. Defaults to `e.type`.\n   */\n  dispatchEvent(e, type) {\n    e.propagationStopped = false;\n    e.propagationImmediatelyStopped = false;\n    this.propagate(e, type);\n    this.dispatch.emit(type || e.type, e);\n  }\n  /**\n   * Maps the given upstream event through the event boundary and propagates it downstream.\n   * @param e - The event to map.\n   */\n  mapEvent(e) {\n    if (!this.rootTarget) {\n      return;\n    }\n    const mappers = this.mappingTable[e.type];\n    if (mappers) {\n      for (let i = 0, j = mappers.length; i < j; i++) {\n        mappers[i].fn(e);\n      }\n    } else {\n      warn(`[EventBoundary]: Event mapping not defined for ${e.type}`);\n    }\n  }\n  /**\n   * Finds the Container that is the target of a event at the given coordinates.\n   *\n   * The passed (x,y) coordinates are in the world space above this event boundary.\n   * @param x - The x coordinate of the event.\n   * @param y - The y coordinate of the event.\n   */\n  hitTest(x, y) {\n    EventsTicker.pauseUpdate = true;\n    const useMove = this._isPointerMoveEvent && this.enableGlobalMoveEvents;\n    const fn = useMove ? \"hitTestMoveRecursive\" : \"hitTestRecursive\";\n    const invertedPath = this[fn](\n      this.rootTarget,\n      this.rootTarget.eventMode,\n      tempHitLocation.set(x, y),\n      this.hitTestFn,\n      this.hitPruneFn\n    );\n    return invertedPath && invertedPath[0];\n  }\n  /**\n   * Propagate the passed event from from {@link EventBoundary.rootTarget this.rootTarget} to its\n   * target `e.target`.\n   * @param e - The event to propagate.\n   * @param type - The type of event to propagate. Defaults to `e.type`.\n   */\n  propagate(e, type) {\n    if (!e.target) {\n      return;\n    }\n    const composedPath = e.composedPath();\n    e.eventPhase = e.CAPTURING_PHASE;\n    for (let i = 0, j = composedPath.length - 1; i < j; i++) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n    e.eventPhase = e.AT_TARGET;\n    e.currentTarget = e.target;\n    this.notifyTarget(e, type);\n    if (e.propagationStopped || e.propagationImmediatelyStopped)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    for (let i = composedPath.length - 2; i >= 0; i--) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n  }\n  /**\n   * Emits the event `e` to all interactive containers. The event is propagated in the bubbling phase always.\n   *\n   * This is used in the `globalpointermove` event.\n   * @param e - The emitted event.\n   * @param type - The listeners to notify.\n   * @param targets - The targets to notify.\n   */\n  all(e, type, targets = this._allInteractiveElements) {\n    if (targets.length === 0)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    const events = Array.isArray(type) ? type : [type];\n    for (let i = targets.length - 1; i >= 0; i--) {\n      events.forEach((event) => {\n        e.currentTarget = targets[i];\n        this.notifyTarget(e, event);\n      });\n    }\n  }\n  /**\n   * Finds the propagation path from {@link EventBoundary.rootTarget rootTarget} to the passed\n   * `target`. The last element in the path is `target`.\n   * @param target - The target to find the propagation path to.\n   */\n  propagationPath(target) {\n    const propagationPath = [target];\n    for (let i = 0; i < PROPAGATION_LIMIT && (target !== this.rootTarget && target.parent); i++) {\n      if (!target.parent) {\n        throw new Error(\"Cannot find propagation path to disconnected target\");\n      }\n      propagationPath.push(target.parent);\n      target = target.parent;\n    }\n    propagationPath.reverse();\n    return propagationPath;\n  }\n  hitTestMoveRecursive(currentTarget, eventMode, location, testFn, pruneFn, ignore = false) {\n    let shouldReturn = false;\n    if (this._interactivePrune(currentTarget))\n      return null;\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestMoveRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          location,\n          testFn,\n          pruneFn,\n          ignore || pruneFn(currentTarget, location)\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive) {\n            if (isInteractive)\n              this._allInteractiveElements.push(currentTarget);\n            nestedHit.push(currentTarget);\n          }\n          if (this._hitElements.length === 0)\n            this._hitElements = nestedHit;\n          shouldReturn = true;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveTarget && isInteractiveTarget)\n      this._allInteractiveElements.push(currentTarget);\n    if (ignore || this._hitElements.length > 0)\n      return null;\n    if (shouldReturn)\n      return this._hitElements;\n    if (isInteractiveMode && (!pruneFn(currentTarget, location) && testFn(currentTarget, location))) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  /**\n   * Recursive implementation for {@link EventBoundary.hitTest hitTest}.\n   * @param currentTarget - The Container that is to be hit tested.\n   * @param eventMode - The event mode for the `currentTarget` or one of its parents.\n   * @param location - The location that is being tested for overlap.\n   * @param testFn - Callback that determines whether the target passes hit testing. This callback\n   *  can assume that `pruneFn` failed to prune the container.\n   * @param pruneFn - Callback that determiness whether the target and all of its children\n   *  cannot pass the hit test. It is used as a preliminary optimization to prune entire subtrees\n   *  of the scene graph.\n   * @returns An array holding the hit testing target and all its ancestors in order. The first element\n   *  is the target itself and the last is {@link EventBoundary.rootTarget rootTarget}. This is the opposite\n   *  order w.r.t. the propagation path. If no hit testing target is found, null is returned.\n   */\n  hitTestRecursive(currentTarget, eventMode, location, testFn, pruneFn) {\n    if (this._interactivePrune(currentTarget) || pruneFn(currentTarget, location)) {\n      return null;\n    }\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      const relativeLocation = location;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          relativeLocation,\n          testFn,\n          pruneFn\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive)\n            nestedHit.push(currentTarget);\n          return nestedHit;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveMode && testFn(currentTarget, location)) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  _isInteractive(int) {\n    return int === \"static\" || int === \"dynamic\";\n  }\n  _interactivePrune(container) {\n    if (!container || !container.visible || !container.renderable || !container.measurable) {\n      return true;\n    }\n    if (container.eventMode === \"none\") {\n      return true;\n    }\n    if (container.eventMode === \"passive\" && !container.interactiveChildren) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container or any of its children cannot pass the hit test at all.\n   *\n   * {@link EventBoundary}'s implementation uses the {@link Container.hitArea hitArea}\n   * and {@link Container._maskEffect} for pruning.\n   * @param container - The container to prune.\n   * @param location - The location to test for overlap.\n   */\n  hitPruneFn(container, location) {\n    if (container.hitArea) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      if (!container.hitArea.contains(tempLocalMapping.x, tempLocalMapping.y)) {\n        return true;\n      }\n    }\n    if (container.effects && container.effects.length) {\n      for (let i = 0; i < container.effects.length; i++) {\n        const effect = container.effects[i];\n        if (effect.containsPoint) {\n          const effectContainsPoint = effect.containsPoint(location, this.hitTestFn);\n          if (!effectContainsPoint) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container passes hit testing for the given location.\n   * @param container - The container to test.\n   * @param location - The location to test for overlap.\n   * @returns - Whether `container` passes hit testing for `location`.\n   */\n  hitTestFn(container, location) {\n    if (container.hitArea) {\n      return true;\n    }\n    if (container?.containsPoint) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      return container.containsPoint(tempLocalMapping);\n    }\n    return false;\n  }\n  /**\n   * Notify all the listeners to the event's `currentTarget`.\n   *\n   * If the `currentTarget` contains the property `on<type>`, then it is called here,\n   * simulating the behavior from version 6.x and prior.\n   * @param e - The event passed to the target.\n   * @param type - The type of event to notify. Defaults to `e.type`.\n   */\n  notifyTarget(e, type) {\n    if (!e.currentTarget.isInteractive()) {\n      return;\n    }\n    type ?? (type = e.type);\n    const handlerKey = `on${type}`;\n    e.currentTarget[handlerKey]?.(e);\n    const key = e.eventPhase === e.CAPTURING_PHASE || e.eventPhase === e.AT_TARGET ? `${type}capture` : type;\n    this._notifyListeners(e, key);\n    if (e.eventPhase === e.AT_TARGET) {\n      this._notifyListeners(e, type);\n    }\n  }\n  /**\n   * Maps the upstream `pointerdown` events to a downstream `pointerdown` event.\n   *\n   * `touchstart`, `rightdown`, `mousedown` events are also dispatched for specific pointer types.\n   * @param from - The upstream `pointerdown` event.\n   */\n  mapPointerDown(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerdown\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchstart\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightdown\" : \"mousedown\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    trackingData.pressTargetsByButton[from.button] = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointermove` to downstream `pointerout`, `pointerover`, and `pointermove` events, in that order.\n   *\n   * The tracking data for the specific pointer has an updated `overTarget`. `mouseout`, `mouseover`,\n   * `mousemove`, and `touchmove` events are fired as well for specific pointer types.\n   * @param from - The upstream `pointermove` event.\n   */\n  mapPointerMove(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    this._isPointerMoveEvent = true;\n    const e = this.createPointerEvent(from);\n    this._isPointerMoveEvent = false;\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    const trackingData = this.trackingData(from.pointerId);\n    const outTarget = this.findMountedTarget(trackingData.overTargets);\n    if (trackingData.overTargets?.length > 0 && outTarget !== e.target) {\n      const outType = from.type === \"mousemove\" ? \"mouseout\" : \"pointerout\";\n      const outEvent = this.createPointerEvent(from, outType, outTarget);\n      this.dispatchEvent(outEvent, \"pointerout\");\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      if (!e.composedPath().includes(outTarget)) {\n        const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n        leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n        while (leaveEvent.target && !e.composedPath().includes(leaveEvent.target)) {\n          leaveEvent.currentTarget = leaveEvent.target;\n          this.notifyTarget(leaveEvent);\n          if (isMouse)\n            this.notifyTarget(leaveEvent, \"mouseleave\");\n          leaveEvent.target = leaveEvent.target.parent;\n        }\n        this.freeEvent(leaveEvent);\n      }\n      this.freeEvent(outEvent);\n    }\n    if (outTarget !== e.target) {\n      const overType = from.type === \"mousemove\" ? \"mouseover\" : \"pointerover\";\n      const overEvent = this.clonePointerEvent(e, overType);\n      this.dispatchEvent(overEvent, \"pointerover\");\n      if (isMouse)\n        this.dispatchEvent(overEvent, \"mouseover\");\n      let overTargetAncestor = outTarget?.parent;\n      while (overTargetAncestor && overTargetAncestor !== this.rootTarget.parent) {\n        if (overTargetAncestor === e.target)\n          break;\n        overTargetAncestor = overTargetAncestor.parent;\n      }\n      const didPointerEnter = !overTargetAncestor || overTargetAncestor === this.rootTarget.parent;\n      if (didPointerEnter) {\n        const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n        enterEvent.eventPhase = enterEvent.AT_TARGET;\n        while (enterEvent.target && enterEvent.target !== outTarget && enterEvent.target !== this.rootTarget.parent) {\n          enterEvent.currentTarget = enterEvent.target;\n          this.notifyTarget(enterEvent);\n          if (isMouse)\n            this.notifyTarget(enterEvent, \"mouseenter\");\n          enterEvent.target = enterEvent.target.parent;\n        }\n        this.freeEvent(enterEvent);\n      }\n      this.freeEvent(overEvent);\n    }\n    const allMethods = [];\n    const allowGlobalPointerEvents = this.enableGlobalMoveEvents ?? true;\n    this.moveOnAll ? allMethods.push(\"pointermove\") : this.dispatchEvent(e, \"pointermove\");\n    allowGlobalPointerEvents && allMethods.push(\"globalpointermove\");\n    if (e.pointerType === \"touch\") {\n      this.moveOnAll ? allMethods.splice(1, 0, \"touchmove\") : this.dispatchEvent(e, \"touchmove\");\n      allowGlobalPointerEvents && allMethods.push(\"globaltouchmove\");\n    }\n    if (isMouse) {\n      this.moveOnAll ? allMethods.splice(1, 0, \"mousemove\") : this.dispatchEvent(e, \"mousemove\");\n      allowGlobalPointerEvents && allMethods.push(\"globalmousemove\");\n      this.cursor = e.target?.cursor;\n    }\n    if (allMethods.length > 0) {\n      this.all(e, allMethods);\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerover` to downstream `pointerover` and `pointerenter` events, in that order.\n   *\n   * The tracking data for the specific pointer gets a new `overTarget`.\n   * @param from - The upstream `pointerover` event.\n   */\n  mapPointerOver(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const e = this.createPointerEvent(from);\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    this.dispatchEvent(e, \"pointerover\");\n    if (isMouse)\n      this.dispatchEvent(e, \"mouseover\");\n    if (e.pointerType === \"mouse\")\n      this.cursor = e.target?.cursor;\n    const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n    enterEvent.eventPhase = enterEvent.AT_TARGET;\n    while (enterEvent.target && enterEvent.target !== this.rootTarget.parent) {\n      enterEvent.currentTarget = enterEvent.target;\n      this.notifyTarget(enterEvent);\n      if (isMouse)\n        this.notifyTarget(enterEvent, \"mouseenter\");\n      enterEvent.target = enterEvent.target.parent;\n    }\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n    this.freeEvent(enterEvent);\n  }\n  /**\n   * Maps the upstream `pointerout` to downstream `pointerout`, `pointerleave` events, in that order.\n   *\n   * The tracking data for the specific pointer is cleared of a `overTarget`.\n   * @param from - The upstream `pointerout` event.\n   */\n  mapPointerOut(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    if (trackingData.overTargets) {\n      const isMouse = from.pointerType === \"mouse\" || from.pointerType === \"pen\";\n      const outTarget = this.findMountedTarget(trackingData.overTargets);\n      const outEvent = this.createPointerEvent(from, \"pointerout\", outTarget);\n      this.dispatchEvent(outEvent);\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n      leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n      while (leaveEvent.target && leaveEvent.target !== this.rootTarget.parent) {\n        leaveEvent.currentTarget = leaveEvent.target;\n        this.notifyTarget(leaveEvent);\n        if (isMouse)\n          this.notifyTarget(leaveEvent, \"mouseleave\");\n        leaveEvent.target = leaveEvent.target.parent;\n      }\n      trackingData.overTargets = null;\n      this.freeEvent(outEvent);\n      this.freeEvent(leaveEvent);\n    }\n    this.cursor = null;\n  }\n  /**\n   * Maps the upstream `pointerup` event to downstream `pointerup`, `pointerupoutside`,\n   * and `click`/`rightclick`/`pointertap` events, in that order.\n   *\n   * The `pointerupoutside` event bubbles from the original `pointerdown` target to the most specific\n   * ancestor of the `pointerdown` and `pointerup` targets, which is also the `click` event's target. `touchend`,\n   * `rightup`, `mouseup`, `touchendoutside`, `rightupoutside`, `mouseupoutside`, and `tap` are fired as well for\n   * specific pointer types.\n   * @param from - The upstream `pointerup` event.\n   */\n  mapPointerUp(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const now = performance.now();\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerup\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchend\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightup\" : \"mouseup\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    let clickTarget = pressTarget;\n    if (pressTarget && !e.composedPath().includes(pressTarget)) {\n      let currentTarget = pressTarget;\n      while (currentTarget && !e.composedPath().includes(currentTarget)) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          const isRightButton = e.button === 2;\n          this.notifyTarget(e, isRightButton ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n      clickTarget = currentTarget;\n    }\n    if (clickTarget) {\n      const clickEvent = this.clonePointerEvent(e, \"click\");\n      clickEvent.target = clickTarget;\n      clickEvent.path = null;\n      if (!trackingData.clicksByButton[from.button]) {\n        trackingData.clicksByButton[from.button] = {\n          clickCount: 0,\n          target: clickEvent.target,\n          timeStamp: now\n        };\n      }\n      const clickHistory = trackingData.clicksByButton[from.button];\n      if (clickHistory.target === clickEvent.target && now - clickHistory.timeStamp < 200) {\n        ++clickHistory.clickCount;\n      } else {\n        clickHistory.clickCount = 1;\n      }\n      clickHistory.target = clickEvent.target;\n      clickHistory.timeStamp = now;\n      clickEvent.detail = clickHistory.clickCount;\n      if (clickEvent.pointerType === \"mouse\") {\n        const isRightButton = clickEvent.button === 2;\n        this.dispatchEvent(clickEvent, isRightButton ? \"rightclick\" : \"click\");\n      } else if (clickEvent.pointerType === \"touch\") {\n        this.dispatchEvent(clickEvent, \"tap\");\n      }\n      this.dispatchEvent(clickEvent, \"pointertap\");\n      this.freeEvent(clickEvent);\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerupoutside` event to a downstream `pointerupoutside` event, bubbling from the original\n   * `pointerdown` target to `rootTarget`.\n   *\n   * (The most specific ancestor of the `pointerdown` event and the `pointerup` event must the\n   * `{@link EventBoundary}'s root because the `pointerup` event occurred outside of the boundary.)\n   *\n   * `touchendoutside`, `mouseupoutside`, and `rightupoutside` events are fired as well for specific pointer\n   * types. The tracking data for the specific pointer is cleared of a `pressTarget`.\n   * @param from - The upstream `pointerupoutside` event.\n   */\n  mapPointerUpOutside(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    const e = this.createPointerEvent(from);\n    if (pressTarget) {\n      let currentTarget = pressTarget;\n      while (currentTarget) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          this.notifyTarget(e, e.button === 2 ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `wheel` event to a downstream `wheel` event.\n   * @param from - The upstream `wheel` event.\n   */\n  mapWheel(from) {\n    if (!(from instanceof FederatedWheelEvent)) {\n      warn(\"EventBoundary cannot map a non-wheel event as a wheel event\");\n      return;\n    }\n    const wheelEvent = this.createWheelEvent(from);\n    this.dispatchEvent(wheelEvent);\n    this.freeEvent(wheelEvent);\n  }\n  /**\n   * Finds the most specific event-target in the given propagation path that is still mounted in the scene graph.\n   *\n   * This is used to find the correct `pointerup` and `pointerout` target in the case that the original `pointerdown`\n   * or `pointerover` target was unmounted from the scene graph.\n   * @param propagationPath - The propagation path was valid in the past.\n   * @returns - The most specific event-target still mounted at the same location in the scene graph.\n   */\n  findMountedTarget(propagationPath) {\n    if (!propagationPath) {\n      return null;\n    }\n    let currentTarget = propagationPath[0];\n    for (let i = 1; i < propagationPath.length; i++) {\n      if (propagationPath[i].parent === currentTarget) {\n        currentTarget = propagationPath[i];\n      } else {\n        break;\n      }\n    }\n    return currentTarget;\n  }\n  /**\n   * Creates an event whose `originalEvent` is `from`, with an optional `type` and `target` override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The `originalEvent` for the returned event.\n   * @param [type=from.type] - The type of the returned event.\n   * @param target - The target of the returned event.\n   */\n  createPointerEvent(from, type, target) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = target ?? this.hitTest(event.global.x, event.global.y) ?? this._hitElements[0];\n    if (typeof type === \"string\") {\n      event.type = type;\n    }\n    return event;\n  }\n  /**\n   * Creates a wheel event whose `originalEvent` is `from`.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The upstream wheel event.\n   */\n  createWheelEvent(from) {\n    const event = this.allocateEvent(FederatedWheelEvent);\n    this.copyWheelData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = this.hitTest(event.global.x, event.global.y);\n    return event;\n  }\n  /**\n   * Clones the event `from`, with an optional `type` override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The event to clone.\n   * @param [type=from.type] - The type of the returned event.\n   */\n  clonePointerEvent(from, type) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from.originalEvent;\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.target = from.target;\n    event.path = from.composedPath().slice();\n    event.type = type ?? event.type;\n    return event;\n  }\n  /**\n   * Copies wheel {@link FederatedWheelEvent} data from `from` into `to`.\n   *\n   * The following properties are copied:\n   * + deltaMode\n   * + deltaX\n   * + deltaY\n   * + deltaZ\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyWheelData(from, to) {\n    to.deltaMode = from.deltaMode;\n    to.deltaX = from.deltaX;\n    to.deltaY = from.deltaY;\n    to.deltaZ = from.deltaZ;\n  }\n  /**\n   * Copies pointer {@link FederatedPointerEvent} data from `from` into `to`.\n   *\n   * The following properties are copied:\n   * + pointerId\n   * + width\n   * + height\n   * + isPrimary\n   * + pointerType\n   * + pressure\n   * + tangentialPressure\n   * + tiltX\n   * + tiltY\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyPointerData(from, to) {\n    if (!(from instanceof FederatedPointerEvent && to instanceof FederatedPointerEvent))\n      return;\n    to.pointerId = from.pointerId;\n    to.width = from.width;\n    to.height = from.height;\n    to.isPrimary = from.isPrimary;\n    to.pointerType = from.pointerType;\n    to.pressure = from.pressure;\n    to.tangentialPressure = from.tangentialPressure;\n    to.tiltX = from.tiltX;\n    to.tiltY = from.tiltY;\n    to.twist = from.twist;\n  }\n  /**\n   * Copies mouse {@link FederatedMouseEvent} data from `from` to `to`.\n   *\n   * The following properties are copied:\n   * + altKey\n   * + button\n   * + buttons\n   * + clientX\n   * + clientY\n   * + metaKey\n   * + movementX\n   * + movementY\n   * + pageX\n   * + pageY\n   * + x\n   * + y\n   * + screen\n   * + shiftKey\n   * + global\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyMouseData(from, to) {\n    if (!(from instanceof FederatedMouseEvent && to instanceof FederatedMouseEvent))\n      return;\n    to.altKey = from.altKey;\n    to.button = from.button;\n    to.buttons = from.buttons;\n    to.client.copyFrom(from.client);\n    to.ctrlKey = from.ctrlKey;\n    to.metaKey = from.metaKey;\n    to.movement.copyFrom(from.movement);\n    to.screen.copyFrom(from.screen);\n    to.shiftKey = from.shiftKey;\n    to.global.copyFrom(from.global);\n  }\n  /**\n   * Copies base {@link FederatedEvent} data from `from` into `to`.\n   *\n   * The following properties are copied:\n   * + isTrusted\n   * + srcElement\n   * + timeStamp\n   * + type\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyData(from, to) {\n    to.isTrusted = from.isTrusted;\n    to.srcElement = from.srcElement;\n    to.timeStamp = performance.now();\n    to.type = from.type;\n    to.detail = from.detail;\n    to.view = from.view;\n    to.which = from.which;\n    to.layer.copyFrom(from.layer);\n    to.page.copyFrom(from.page);\n  }\n  /**\n   * @param id - The pointer ID.\n   * @returns The tracking data stored for the given pointer. If no data exists, a blank\n   *  state will be created.\n   */\n  trackingData(id) {\n    if (!this.mappingState.trackingData[id]) {\n      this.mappingState.trackingData[id] = {\n        pressTargetsByButton: {},\n        clicksByButton: {},\n        overTarget: null\n      };\n    }\n    return this.mappingState.trackingData[id];\n  }\n  /**\n   * Allocate a specific type of event from {@link EventBoundary#eventPool this.eventPool}.\n   *\n   * This allocation is constructor-agnostic, as long as it only takes one argument - this event\n   * boundary.\n   * @param constructor - The event's constructor.\n   */\n  allocateEvent(constructor) {\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    const event = this.eventPool.get(constructor).pop() || new constructor(this);\n    event.eventPhase = event.NONE;\n    event.currentTarget = null;\n    event.defaultPrevented = false;\n    event.path = null;\n    event.target = null;\n    return event;\n  }\n  /**\n   * Frees the event and puts it back into the event pool.\n   *\n   * It is illegal to reuse the event until it is allocated again, using `this.allocateEvent`.\n   *\n   * It is also advised that events not allocated from {@link EventBoundary#allocateEvent this.allocateEvent}\n   * not be freed. This is because of the possibility that the same event is freed twice, which can cause\n   * it to be allocated twice & result in overwriting.\n   * @param event - The event to be freed.\n   * @throws Error if the event is managed by another event boundary.\n   */\n  freeEvent(event) {\n    if (event.manager !== this)\n      throw new Error(\"It is illegal to free an event not managed by this EventBoundary!\");\n    const constructor = event.constructor;\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    this.eventPool.get(constructor).push(event);\n  }\n  /**\n   * Similar to {@link EventEmitter.emit}, except it stops if the `propagationImmediatelyStopped` flag\n   * is set on the event.\n   * @param e - The event to call each listener with.\n   * @param type - The event key.\n   */\n  _notifyListeners(e, type) {\n    const listeners = e.currentTarget._events[type];\n    if (!listeners)\n      return;\n    if (\"fn\" in listeners) {\n      if (listeners.once)\n        e.currentTarget.removeListener(type, listeners.fn, void 0, true);\n      listeners.fn.call(listeners.context, e);\n    } else {\n      for (let i = 0, j = listeners.length; i < j && !e.propagationImmediatelyStopped; i++) {\n        if (listeners[i].once)\n          e.currentTarget.removeListener(type, listeners[i].fn, void 0, true);\n        listeners[i].fn.call(listeners[i].context, e);\n      }\n    }\n  }\n}\n\nexport { EventBoundary };\n//# sourceMappingURL=EventBoundary.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { EventBoundary } from './EventBoundary.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER = {\n  touchstart: \"pointerdown\",\n  touchend: \"pointerup\",\n  touchendoutside: \"pointerupoutside\",\n  touchmove: \"pointermove\",\n  touchcancel: \"pointercancel\"\n};\nconst _EventSystem = class _EventSystem {\n  /**\n   * @param {Renderer} renderer\n   */\n  constructor(renderer) {\n    /**\n     * Indicates whether the current device supports touch events according to the W3C Touch Events spec.\n     * This is used to determine the appropriate event handling strategy.\n     * @see {@link https://www.w3.org/TR/touch-events/} W3C Touch Events Specification\n     * @readonly\n     * @default 'ontouchstart' in globalThis\n     */\n    this.supportsTouchEvents = \"ontouchstart\" in globalThis;\n    /**\n     * Indicates whether the current device supports pointer events according to the W3C Pointer Events spec.\n     * Used to optimize event handling and provide more consistent cross-device interaction.\n     * @see {@link https://www.w3.org/TR/pointerevents/} W3C Pointer Events Specification\n     * @readonly\n     * @default !!globalThis.PointerEvent\n     */\n    this.supportsPointerEvents = !!globalThis.PointerEvent;\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    this.domElement = null;\n    /** The resolution used to convert between the DOM client space into world space. */\n    this.resolution = 1;\n    this.renderer = renderer;\n    this.rootBoundary = new EventBoundary(null);\n    EventsTicker.init(this);\n    this.autoPreventDefault = true;\n    this._eventsAdded = false;\n    this._rootPointerEvent = new FederatedPointerEvent(null);\n    this._rootWheelEvent = new FederatedWheelEvent(null);\n    this.cursorStyles = {\n      default: \"inherit\",\n      pointer: \"pointer\"\n    };\n    this.features = new Proxy({ ..._EventSystem.defaultEventFeatures }, {\n      set: (target, key, value) => {\n        if (key === \"globalMove\") {\n          this.rootBoundary.enableGlobalMoveEvents = value;\n        }\n        target[key] = value;\n        return true;\n      }\n    });\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerUp = this._onPointerUp.bind(this);\n    this._onPointerOverOut = this._onPointerOverOut.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n  }\n  /**\n   * The default interaction mode for all display objects.\n   * @see Container.eventMode\n   * @type {EventMode}\n   * @readonly\n   * @since 7.2.0\n   */\n  static get defaultEventMode() {\n    return this._defaultEventMode;\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const { canvas, resolution } = this.renderer;\n    this.setTargetElement(canvas);\n    this.resolution = resolution;\n    _EventSystem._defaultEventMode = options.eventMode ?? \"passive\";\n    Object.assign(this.features, options.eventFeatures ?? {});\n    this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n  }\n  /**\n   * Handle changing resolution.\n   * @ignore\n   */\n  resolutionChange(resolution) {\n    this.resolution = resolution;\n  }\n  /** Destroys all event listeners and detaches the renderer. */\n  destroy() {\n    this.setTargetElement(null);\n    this.renderer = null;\n    this._currentCursor = null;\n  }\n  /**\n   * Sets the current cursor mode, handling any callbacks or CSS style changes.\n   * The cursor can be a CSS cursor string, a custom callback function, or a key from the cursorStyles dictionary.\n   * @param mode - Cursor mode to set. Can be:\n   * - A CSS cursor string (e.g., 'pointer', 'grab')\n   * - A key from the cursorStyles dictionary\n   * - null/undefined to reset to default\n   * @example\n   * ```ts\n   * // Using predefined cursor styles\n   * app.renderer.events.setCursor('pointer');    // Set standard pointer cursor\n   * app.renderer.events.setCursor('grab');       // Set grab cursor\n   * app.renderer.events.setCursor(null);         // Reset to default\n   *\n   * // Using custom cursor styles\n   * app.renderer.events.cursorStyles.custom = 'url(\"cursor.png\"), auto';\n   * app.renderer.events.setCursor('custom');     // Apply custom cursor\n   *\n   * // Using callback-based cursor\n   * app.renderer.events.cursorStyles.dynamic = (mode) => {\n   *     document.body.style.cursor = mode === 'hover' ? 'pointer' : 'default';\n   * };\n   * app.renderer.events.setCursor('dynamic');    // Trigger cursor callback\n   * ```\n   * @remarks\n   * - Has no effect on OffscreenCanvas except for callback-based cursors\n   * - Caches current cursor to avoid unnecessary DOM updates\n   * - Supports CSS cursor values, style objects, and callback functions\n   * @see {@link EventSystem.cursorStyles} For defining custom cursor styles\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} MDN Cursor Reference\n   */\n  setCursor(mode) {\n    mode || (mode = \"default\");\n    let applyStyles = true;\n    if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas) {\n      applyStyles = false;\n    }\n    if (this._currentCursor === mode) {\n      return;\n    }\n    this._currentCursor = mode;\n    const style = this.cursorStyles[mode];\n    if (style) {\n      switch (typeof style) {\n        case \"string\":\n          if (applyStyles) {\n            this.domElement.style.cursor = style;\n          }\n          break;\n        case \"function\":\n          style(mode);\n          break;\n        case \"object\":\n          if (applyStyles) {\n            Object.assign(this.domElement.style, style);\n          }\n          break;\n      }\n    } else if (applyStyles && typeof mode === \"string\" && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode)) {\n      this.domElement.style.cursor = mode;\n    }\n  }\n  /**\n   * The global pointer event instance containing the most recent pointer state.\n   * This is useful for accessing pointer information without listening to events.\n   * @example\n   * ```ts\n   * // Access current pointer position at any time\n   * const eventSystem = app.renderer.events;\n   * const pointer = eventSystem.pointer;\n   *\n   * // Get global coordinates\n   * console.log('Position:', pointer.global.x, pointer.global.y);\n   *\n   * // Check button state\n   * console.log('Buttons pressed:', pointer.buttons);\n   *\n   * // Get pointer type and pressure\n   * console.log('Type:', pointer.pointerType);\n   * console.log('Pressure:', pointer.pressure);\n   * ```\n   * @readonly\n   * @since 7.2.0\n   * @see {@link FederatedPointerEvent} For all available pointer properties\n   */\n  get pointer() {\n    return this._rootPointerEvent;\n  }\n  /**\n   * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerDown(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const events = this._normalizeToPointerData(nativeEvent);\n    if (this.autoPreventDefault && events[0].isNormalized) {\n      const cancelable = nativeEvent.cancelable || !(\"cancelable\" in nativeEvent);\n      if (cancelable) {\n        nativeEvent.preventDefault();\n      }\n    }\n    for (let i = 0, j = events.length; i < j; i++) {\n      const nativeEvent2 = events[i];\n      const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent2);\n      this.rootBoundary.mapEvent(federatedEvent);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch events.\n   */\n  _onPointerMove(nativeEvent) {\n    if (!this.features.move)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    EventsTicker.pointerMoved();\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerUp(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    let target = nativeEvent.target;\n    if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0) {\n      target = nativeEvent.composedPath()[0];\n    }\n    const outside = target !== this.domElement ? \"outside\" : \"\";\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      event.type += outside;\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerOverOut(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n   * @param nativeEvent - The native wheel event.\n   */\n  onWheel(nativeEvent) {\n    if (!this.features.wheel)\n      return;\n    const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    this.rootBoundary.mapEvent(wheelEvent);\n  }\n  /**\n   * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n   * This method manages the DOM event bindings for the event system, allowing you to\n   * change or remove the target element that receives input events.\n   * > [!IMPORTANT] This will default to the canvas element of the renderer, so you\n   * > should not need to call this unless you are using a custom element.\n   * @param element - The new DOM element to bind events to, or null to remove all event bindings\n   * @example\n   * ```ts\n   * // Set a new canvas element as the target\n   * const canvas = document.createElement('canvas');\n   * app.renderer.events.setTargetElement(canvas);\n   *\n   * // Remove all event bindings\n   * app.renderer.events.setTargetElement(null);\n   *\n   * // Switch to a different canvas\n   * const newCanvas = document.querySelector('#game-canvas');\n   * app.renderer.events.setTargetElement(newCanvas);\n   * ```\n   * @remarks\n   * - Automatically removes event listeners from previous element\n   * - Required for the event system to function\n   * - Safe to call multiple times\n   * @see {@link EventSystem#domElement} The current DOM element\n   * @see {@link EventsTicker} For the ticker system that tracks pointer movement\n   */\n  setTargetElement(element) {\n    this._removeEvents();\n    this.domElement = element;\n    EventsTicker.domElement = element;\n    this._addEvents();\n  }\n  /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n  _addEvents() {\n    if (this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.addTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"none\";\n        style.msTouchAction = \"none\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"none\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.addEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.addEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.addEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.addEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.addEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.addEventListener(\"wheel\", this.onWheel, {\n      passive: true,\n      capture: true\n    });\n    this._eventsAdded = true;\n  }\n  /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n  _removeEvents() {\n    if (!this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.removeTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"\";\n        style.msTouchAction = \"\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.removeEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.removeEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.removeEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.removeEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.removeEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.removeEventListener(\"wheel\", this.onWheel, true);\n    this.domElement = null;\n    this._eventsAdded = false;\n  }\n  /**\n   * Maps coordinates from DOM/screen space into PixiJS normalized coordinates.\n   * This takes into account the current scale, position, and resolution of the DOM element.\n   * @param point - The point to store the mapped coordinates in\n   * @param x - The x coordinate in DOM/client space\n   * @param y - The y coordinate in DOM/client space\n   * @example\n   * ```ts\n   * // Map mouse coordinates to PixiJS space\n   * const point = new Point();\n   * app.renderer.events.mapPositionToPoint(\n   *     point,\n   *     event.clientX,\n   *     event.clientY\n   * );\n   * console.log('Mapped position:', point.x, point.y);\n   *\n   * // Using with pointer events\n   * sprite.on('pointermove', (event) => {\n   *     // event.global already contains mapped coordinates\n   *     console.log('Global:', event.global.x, event.global.y);\n   *\n   *     // Map to local coordinates\n   *     const local = event.getLocalPosition(sprite);\n   *     console.log('Local:', local.x, local.y);\n   * });\n   * ```\n   * @remarks\n   * - Accounts for element scaling and positioning\n   * - Adjusts for device pixel ratio/resolution\n   */\n  mapPositionToPoint(point, x, y) {\n    const rect = this.domElement.isConnected ? this.domElement.getBoundingClientRect() : {\n      x: 0,\n      y: 0,\n      width: this.domElement.width,\n      height: this.domElement.height,\n      left: 0,\n      top: 0\n    };\n    const resolutionMultiplier = 1 / this.resolution;\n    point.x = (x - rect.left) * (this.domElement.width / rect.width) * resolutionMultiplier;\n    point.y = (y - rect.top) * (this.domElement.height / rect.height) * resolutionMultiplier;\n  }\n  /**\n   * Ensures that the original event object contains all data that a regular pointer event would have\n   * @param event - The original event data from a touch or mouse event\n   * @returns An array containing a single normalized pointer event, in the case of a pointer\n   *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n   */\n  _normalizeToPointerData(event) {\n    const normalizedEvents = [];\n    if (this.supportsTouchEvents && event instanceof TouchEvent) {\n      for (let i = 0, li = event.changedTouches.length; i < li; i++) {\n        const touch = event.changedTouches[i];\n        if (typeof touch.button === \"undefined\")\n          touch.button = 0;\n        if (typeof touch.buttons === \"undefined\")\n          touch.buttons = 1;\n        if (typeof touch.isPrimary === \"undefined\") {\n          touch.isPrimary = event.touches.length === 1 && event.type === \"touchstart\";\n        }\n        if (typeof touch.width === \"undefined\")\n          touch.width = touch.radiusX || 1;\n        if (typeof touch.height === \"undefined\")\n          touch.height = touch.radiusY || 1;\n        if (typeof touch.tiltX === \"undefined\")\n          touch.tiltX = 0;\n        if (typeof touch.tiltY === \"undefined\")\n          touch.tiltY = 0;\n        if (typeof touch.pointerType === \"undefined\")\n          touch.pointerType = \"touch\";\n        if (typeof touch.pointerId === \"undefined\")\n          touch.pointerId = touch.identifier || 0;\n        if (typeof touch.pressure === \"undefined\")\n          touch.pressure = touch.force || 0.5;\n        if (typeof touch.twist === \"undefined\")\n          touch.twist = 0;\n        if (typeof touch.tangentialPressure === \"undefined\")\n          touch.tangentialPressure = 0;\n        if (typeof touch.layerX === \"undefined\")\n          touch.layerX = touch.offsetX = touch.clientX;\n        if (typeof touch.layerY === \"undefined\")\n          touch.layerY = touch.offsetY = touch.clientY;\n        touch.isNormalized = true;\n        touch.type = event.type;\n        normalizedEvents.push(touch);\n      }\n    } else if (!globalThis.MouseEvent || event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))) {\n      const tempEvent = event;\n      if (typeof tempEvent.isPrimary === \"undefined\")\n        tempEvent.isPrimary = true;\n      if (typeof tempEvent.width === \"undefined\")\n        tempEvent.width = 1;\n      if (typeof tempEvent.height === \"undefined\")\n        tempEvent.height = 1;\n      if (typeof tempEvent.tiltX === \"undefined\")\n        tempEvent.tiltX = 0;\n      if (typeof tempEvent.tiltY === \"undefined\")\n        tempEvent.tiltY = 0;\n      if (typeof tempEvent.pointerType === \"undefined\")\n        tempEvent.pointerType = \"mouse\";\n      if (typeof tempEvent.pointerId === \"undefined\")\n        tempEvent.pointerId = MOUSE_POINTER_ID;\n      if (typeof tempEvent.pressure === \"undefined\")\n        tempEvent.pressure = 0.5;\n      if (typeof tempEvent.twist === \"undefined\")\n        tempEvent.twist = 0;\n      if (typeof tempEvent.tangentialPressure === \"undefined\")\n        tempEvent.tangentialPressure = 0;\n      tempEvent.isNormalized = true;\n      normalizedEvents.push(tempEvent);\n    } else {\n      normalizedEvents.push(event);\n    }\n    return normalizedEvents;\n  }\n  /**\n   * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n   *\n   * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n   * multiple native wheel events.\n   * @param nativeEvent - The native wheel event that occurred on the canvas.\n   * @returns A federated wheel event.\n   */\n  normalizeWheelEvent(nativeEvent) {\n    const event = this._rootWheelEvent;\n    this._transferMouseData(event, nativeEvent);\n    event.deltaX = nativeEvent.deltaX;\n    event.deltaY = nativeEvent.deltaY;\n    event.deltaZ = nativeEvent.deltaZ;\n    event.deltaMode = nativeEvent.deltaMode;\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.nativeEvent = nativeEvent;\n    event.type = nativeEvent.type;\n    return event;\n  }\n  /**\n   * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n   * @param event\n   * @param nativeEvent\n   */\n  _bootstrapEvent(event, nativeEvent) {\n    event.originalEvent = null;\n    event.nativeEvent = nativeEvent;\n    event.pointerId = nativeEvent.pointerId;\n    event.width = nativeEvent.width;\n    event.height = nativeEvent.height;\n    event.isPrimary = nativeEvent.isPrimary;\n    event.pointerType = nativeEvent.pointerType;\n    event.pressure = nativeEvent.pressure;\n    event.tangentialPressure = nativeEvent.tangentialPressure;\n    event.tiltX = nativeEvent.tiltX;\n    event.tiltY = nativeEvent.tiltY;\n    event.twist = nativeEvent.twist;\n    this._transferMouseData(event, nativeEvent);\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.isTrusted = nativeEvent.isTrusted;\n    if (event.type === \"pointerleave\") {\n      event.type = \"pointerout\";\n    }\n    if (event.type.startsWith(\"mouse\")) {\n      event.type = event.type.replace(\"mouse\", \"pointer\");\n    }\n    if (event.type.startsWith(\"touch\")) {\n      event.type = TOUCH_TO_POINTER[event.type] || event.type;\n    }\n    return event;\n  }\n  /**\n   * Transfers base & mouse event data from the `nativeEvent` to the federated event.\n   * @param event\n   * @param nativeEvent\n   */\n  _transferMouseData(event, nativeEvent) {\n    event.isTrusted = nativeEvent.isTrusted;\n    event.srcElement = nativeEvent.srcElement;\n    event.timeStamp = performance.now();\n    event.type = nativeEvent.type;\n    event.altKey = nativeEvent.altKey;\n    event.button = nativeEvent.button;\n    event.buttons = nativeEvent.buttons;\n    event.client.x = nativeEvent.clientX;\n    event.client.y = nativeEvent.clientY;\n    event.ctrlKey = nativeEvent.ctrlKey;\n    event.metaKey = nativeEvent.metaKey;\n    event.movement.x = nativeEvent.movementX;\n    event.movement.y = nativeEvent.movementY;\n    event.page.x = nativeEvent.pageX;\n    event.page.y = nativeEvent.pageY;\n    event.relatedTarget = null;\n    event.shiftKey = nativeEvent.shiftKey;\n  }\n};\n/** @ignore */\n_EventSystem.extension = {\n  name: \"events\",\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.CanvasSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  priority: -1\n};\n/**\n * The event features that are enabled by the EventSystem\n * @since 7.2.0\n * @example\n * ```ts\n * import { EventSystem, EventSystemFeatures } from 'pixi.js';\n * // Access the default event features\n * EventSystem.defaultEventFeatures = {\n *     // Enable pointer movement events\n *     move: true,\n *     // Enable global pointer move events\n *     globalMove: true,\n *     // Enable click events\n *     click: true,\n *     // Enable wheel events\n *     wheel: true,\n * };\n * ```\n */\n_EventSystem.defaultEventFeatures = {\n  /** Enables pointer events associated with pointer movement. */\n  move: true,\n  /** Enables global pointer move events. */\n  globalMove: true,\n  /** Enables pointer events associated with clicking. */\n  click: true,\n  /** Enables wheel events. */\n  wheel: true\n};\nlet EventSystem = _EventSystem;\n\nexport { EventSystem };\n//# sourceMappingURL=EventSystem.mjs.map\n","import { EventSystem } from './EventSystem.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nconst FederatedContainer = {\n  onclick: null,\n  onmousedown: null,\n  onmouseenter: null,\n  onmouseleave: null,\n  onmousemove: null,\n  onglobalmousemove: null,\n  onmouseout: null,\n  onmouseover: null,\n  onmouseup: null,\n  onmouseupoutside: null,\n  onpointercancel: null,\n  onpointerdown: null,\n  onpointerenter: null,\n  onpointerleave: null,\n  onpointermove: null,\n  onglobalpointermove: null,\n  onpointerout: null,\n  onpointerover: null,\n  onpointertap: null,\n  onpointerup: null,\n  onpointerupoutside: null,\n  onrightclick: null,\n  onrightdown: null,\n  onrightup: null,\n  onrightupoutside: null,\n  ontap: null,\n  ontouchcancel: null,\n  ontouchend: null,\n  ontouchendoutside: null,\n  ontouchmove: null,\n  onglobaltouchmove: null,\n  ontouchstart: null,\n  onwheel: null,\n  get interactive() {\n    return this.eventMode === \"dynamic\" || this.eventMode === \"static\";\n  },\n  set interactive(value) {\n    this.eventMode = value ? \"static\" : \"passive\";\n  },\n  _internalEventMode: void 0,\n  get eventMode() {\n    return this._internalEventMode ?? EventSystem.defaultEventMode;\n  },\n  set eventMode(value) {\n    this._internalEventMode = value;\n  },\n  isInteractive() {\n    return this.eventMode === \"static\" || this.eventMode === \"dynamic\";\n  },\n  interactiveChildren: true,\n  hitArea: null,\n  addEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const signal = typeof options === \"object\" ? options.signal : void 0;\n    const once = typeof options === \"object\" ? options.once === true : false;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    const listenerFn = typeof listener === \"function\" ? listener : listener.handleEvent;\n    const emitter = this;\n    if (signal) {\n      signal.addEventListener(\"abort\", () => {\n        emitter.off(type, listenerFn, context);\n      });\n    }\n    if (once) {\n      emitter.once(type, listenerFn, context);\n    } else {\n      emitter.on(type, listenerFn, context);\n    }\n  },\n  removeEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    listener = typeof listener === \"function\" ? listener : listener.handleEvent;\n    this.off(type, listener, context);\n  },\n  dispatchEvent(e) {\n    if (!(e instanceof FederatedEvent)) {\n      throw new Error(\"Container cannot propagate events outside of the Federated Events API\");\n    }\n    e.defaultPrevented = false;\n    e.path = null;\n    e.target = this;\n    e.manager.dispatchEvent(e);\n    return !e.defaultPrevented;\n  }\n};\n\nexport { FederatedContainer };\n//# sourceMappingURL=FederatedEventTarget.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { EventSystem } from './EventSystem.mjs';\nimport { FederatedContainer } from './FederatedEventTarget.mjs';\n\n\"use strict\";\nextensions.add(EventSystem);\nextensions.mixin(Container, FederatedContainer);\n//# sourceMappingURL=init.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass DOMPipe {\n  /**\n   * Constructor for the DOMPipe class.\n   * @param renderer - The renderer instance that this DOMPipe will be associated with.\n   */\n  constructor(renderer) {\n    /** Array to keep track of attached DOM elements */\n    this._attachedDomElements = [];\n    this._renderer = renderer;\n    this._renderer.runners.postrender.add(this);\n    this._domElement = document.createElement(\"div\");\n    this._domElement.style.position = \"absolute\";\n    this._domElement.style.top = \"0\";\n    this._domElement.style.left = \"0\";\n    this._domElement.style.pointerEvents = \"none\";\n    this._domElement.style.zIndex = \"1000\";\n  }\n  /**\n   * Adds a renderable DOM container to the list of attached elements.\n   * @param domContainer - The DOM container to be added.\n   * @param _instructionSet - The instruction set (unused).\n   */\n  addRenderable(domContainer, _instructionSet) {\n    if (!this._attachedDomElements.includes(domContainer)) {\n      this._attachedDomElements.push(domContainer);\n    }\n  }\n  /**\n   * Updates a renderable DOM container.\n   * @param _domContainer - The DOM container to be updated (unused).\n   */\n  updateRenderable(_domContainer) {\n  }\n  /**\n   * Validates a renderable DOM container.\n   * @param _domContainer - The DOM container to be validated (unused).\n   * @returns Always returns true as validation is not required.\n   */\n  validateRenderable(_domContainer) {\n    return true;\n  }\n  /** Handles the post-rendering process, ensuring DOM elements are correctly positioned and visible. */\n  postrender() {\n    const attachedDomElements = this._attachedDomElements;\n    if (attachedDomElements.length === 0) {\n      this._domElement.remove();\n      return;\n    }\n    const canvas = this._renderer.view.canvas;\n    if (this._domElement.parentNode !== canvas.parentNode) {\n      canvas.parentNode?.appendChild(this._domElement);\n    }\n    const sx = parseFloat(canvas.style.width) / canvas.width * this._renderer.resolution;\n    const sy = parseFloat(canvas.style.height) / canvas.height * this._renderer.resolution;\n    this._domElement.style.transform = `translate(${canvas.offsetLeft}px, ${canvas.offsetTop}px) scale(${sx}, ${sy})`;\n    for (let i = 0; i < attachedDomElements.length; i++) {\n      const domContainer = attachedDomElements[i];\n      const element = domContainer.element;\n      if (!domContainer.parent || domContainer.globalDisplayStatus < 7) {\n        element?.remove();\n        attachedDomElements.splice(i, 1);\n        i--;\n      } else {\n        if (!this._domElement.contains(element)) {\n          element.style.position = \"absolute\";\n          element.style.pointerEvents = \"auto\";\n          this._domElement.appendChild(element);\n        }\n        const wt = domContainer.worldTransform;\n        const anchor = domContainer._anchor;\n        const ax = domContainer.width * anchor.x;\n        const ay = domContainer.height * anchor.y;\n        element.style.transformOrigin = `${ax}px ${ay}px`;\n        element.style.transform = `matrix(${wt.a}, ${wt.b}, ${wt.c}, ${wt.d}, ${wt.tx - ax}, ${wt.ty - ay})`;\n        element.style.opacity = domContainer.groupAlpha.toString();\n      }\n    }\n  }\n  /** Destroys the DOMPipe, removing all attached DOM elements and cleaning up resources. */\n  destroy() {\n    this._renderer.runners.postrender.remove(this);\n    for (let i = 0; i < this._attachedDomElements.length; i++) {\n      const domContainer = this._attachedDomElements[i];\n      domContainer.element?.remove();\n    }\n    this._attachedDomElements.length = 0;\n    this._domElement.remove();\n    this._renderer = null;\n  }\n}\n/**\n * Static property defining the extension type and name for the DOMPipe.\n * This is used to register the DOMPipe with different rendering pipelines.\n */\nDOMPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"dom\"\n};\n\nexport { DOMPipe };\n//# sourceMappingURL=DOMPipe.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { DOMPipe } from './DOMPipe.mjs';\nimport './index.mjs';\nexport { DOMContainer } from './DOMContainer.mjs';\n\n\"use strict\";\nextensions.add(DOMPipe);\n\nexport { DOMPipe };\n//# sourceMappingURL=init.mjs.map\n"],"names":["FederatedEvent","constructor","manager","this","bubbles","cancelBubble","cancelable","composed","defaultPrevented","eventPhase","prototype","NONE","propagationStopped","propagationImmediatelyStopped","layer","Point","page","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","layerX","x","layerY","y","pageX","pageY","data","composedPath","path","length","target","propagationPath","initEvent","_type","_bubbles","_cancelable","Error","initUIEvent","_typeArg","_bubblesArg","_cancelableArg","_viewArg","_detailArg","preventDefault","nativeEvent","Event","stopImmediatePropagation","stopPropagation","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","platform","maxTouchPoints","MSStream","isMobile","param","nav","userAgent","tmp","split","match","regex","test","createMatch","result","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","globalThis","_AccessibilitySystem","renderer","_mobileInfo","debug","_activateOnTab","_deactivateOnMouseMove","_isActive","_isMobileAccessibility","_div","_pool","_renderId","_children","_androidUpdateCount","_androidUpdateFrequency","_hookDiv","_createTouchHook","_renderer","isActive","isMobileAccessibility","hookDiv","document","createElement","style","width","height","position","top","left","zIndex","toString","backgroundColor","title","addEventListener","_activate","_destroyTouchHook","body","appendChild","removeChild","pointerEvents","_onKeyDown","bind","_onMouseMove","canvas","view","parentNode","_initAccessibilitySetup","observer","MutationObserver","disconnect","observe","childList","subtree","runners","postrender","add","lastObjectRendered","_updateAccessibleObjects","_deactivate","removeEventListener","remove","child","_accessibleDiv","_accessibleActive","forEach","div","container","visible","accessibleChildren","accessible","_addChild","children","i","init","options","mergedOptions","accessibilityOptions","defaultOptions","activateOnTab","deactivateOnMouseMove","enabledByDefault","now","performance","renderingToScreen","activeIds","Set","indexOf","has","push","removeItems","viewWidth","viewHeight","screen","hitArea","getBounds","rectangle","wt","worldTransform","sx","resolution","sy","tx","a","ty","d","_capHitArea","_updateDebugHTML","innerHTML","type","tabIndex","pop","accessibleType","cssText","accessibleText","innerText","borderStyle","toLowerCase","includes","setAttribute","_onClick","_onFocus","_onFocusOut","accessiblePointerEvents","accessibleTitle","accessibleHint","interactive","_dispatchEvent","e","boundary","events","rootBoundary","event","Object","assign","rootTarget","type2","dispatchEvent","getAttribute","keyCode","movementX","movementY","destroy","setAccessibilityEnabled","enabled","extension","WebGLSystem","WebGPUSystem","name","AccessibilitySystem","mixin","Container","EventsTicker","interactionFrequency","_deltaTime","_didMove","_tickerAdded","_pauseUpdate","removeTickerListener","pauseUpdate","paused","addTickerListener","domElement","Ticker","system","_tickerUpdate","INTERACTION","pointerMoved","_update","rootPointerEvent","supportsTouchEvents","pointerType","supportsPointerEvents","PointerEvent","clientX","clientY","pointerId","MouseEvent","ticker","deltaTime","FederatedMouseEvent","super","arguments","client","movement","offset","global","offsetX","offsetY","globalX","globalY","screenX","screenY","getLocalPosition","point","globalPos","applyInverse","getModifierState","key","initMouseEvent","_canBubbleArg","_screenXArg","_screenYArg","_clientXArg","_clientYArg","_ctrlKeyArg","_altKeyArg","_shiftKeyArg","_metaKeyArg","_buttonArg","_relatedTargetArg","FederatedPointerEvent","isPrimary","getCoalescedEvents","getPredictedEvents","FederatedWheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","DOM_DELTA_PAGE","tempHitLocation","tempLocalMapping","EventBoundary","dispatch","moveOnAll","enableGlobalMoveEvents","mappingState","trackingData","eventPool","Map","_allInteractiveElements","_hitElements","_isPointerMoveEvent","hitPruneFn","hitTestFn","mapPointerDown","mapPointerMove","mapPointerOut","mapPointerOver","mapPointerUp","mapPointerUpOutside","mapWheel","mappingTable","addEventMapping","fn","priority","sort","b","propagate","emit","mapEvent","mappers","j","warn","hitTest","invertedPath","eventMode","set","currentTarget","notifyTarget","all","targets","Array","isArray","parent","reverse","hitTestMoveRecursive","location","testFn","pruneFn","ignore","shouldReturn","_interactivePrune","interactiveChildren","nestedHit","_isInteractive","isInteractive","isInteractiveMode","isInteractiveTarget","hitTestRecursive","relativeLocation","int","renderable","measurable","contains","effects","effect","containsPoint","handlerKey","_notifyListeners","from","createPointerEvent","isRightButton","button","pressTargetsByButton","freeEvent","isMouse","outTarget","findMountedTarget","overTargets","outType","outEvent","leaveEvent","overType","overEvent","clonePointerEvent","overTargetAncestor","enterEvent","allMethods","allowGlobalPointerEvents","splice","cursor","pressTarget","clickTarget","clickEvent","clicksByButton","clickCount","timeStamp","clickHistory","detail","wheelEvent","createWheelEvent","allocateEvent","copyPointerData","copyMouseData","copyData","originalEvent","copyWheelData","slice","to","deltaMode","deltaX","deltaY","deltaZ","pressure","tangentialPressure","tiltX","tiltY","twist","altKey","buttons","copyFrom","ctrlKey","metaKey","shiftKey","isTrusted","srcElement","which","id","overTarget","get","listeners","_events","once","removeListener","call","context","TOUCH_TO_POINTER","touchstart","touchend","touchendoutside","touchmove","touchcancel","_EventSystem","autoPreventDefault","_eventsAdded","_rootPointerEvent","_rootWheelEvent","cursorStyles","default","pointer","features","Proxy","defaultEventFeatures","value","_onPointerDown","_onPointerMove","_onPointerUp","_onPointerOverOut","onWheel","defaultEventMode","_defaultEventMode","setTargetElement","eventFeatures","globalMove","resolutionChange","_currentCursor","setCursor","mode","applyStyles","OffscreenCanvas","hasOwnProperty","click","_normalizeToPointerData","isNormalized","nativeEvent2","federatedEvent","_bootstrapEvent","move","normalizedEvents","outside","wheel","normalizeWheelEvent","element","_removeEvents","_addEvents","msPointerEnabled","msContentZooming","msTouchAction","touchAction","passive","capture","mapPositionToPoint","rect","isConnected","getBoundingClientRect","resolutionMultiplier","TouchEvent","li","changedTouches","touch","touches","radiusX","radiusY","identifier","force","tempEvent","_transferMouseData","startsWith","replace","relatedTarget","CanvasSystem","EventSystem","FederatedContainer","onclick","onmousedown","onmouseenter","onmouseleave","onmousemove","onglobalmousemove","onmouseout","onmouseover","onmouseup","onmouseupoutside","onpointercancel","onpointerdown","onpointerenter","onpointerleave","onpointermove","onglobalpointermove","onpointerout","onpointerover","onpointertap","onpointerup","onpointerupoutside","onrightclick","onrightdown","onrightup","onrightupoutside","ontap","ontouchcancel","ontouchend","ontouchendoutside","ontouchmove","onglobaltouchmove","ontouchstart","onwheel","_internalEventMode","listener","signal","listenerFn","handleEvent","emitter","off","on","DOMPipe","_attachedDomElements","_domElement","addRenderable","domContainer","_instructionSet","updateRenderable","_domContainer","validateRenderable","attachedDomElements","parseFloat","transform","offsetLeft","offsetTop","globalDisplayStatus","anchor","_anchor","ax","ay","transformOrigin","c","opacity","groupAlpha","WebGLPipes","WebGPUPipes","CanvasPipes"],"sourceRoot":""}